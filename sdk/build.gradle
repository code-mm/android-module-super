apply plugin: 'com.android.library'
apply plugin: 'maven'


android {
    compileSdkVersion rootProject.ext.compileSdkVersion
    buildToolsVersion rootProject.ext.buildToolsVersion
    defaultConfig {
        minSdkVersion rootProject.ext.minSdkVersion
        targetSdkVersion rootProject.ext.targetSdkVersion
        versionCode 1
        versionName "1.0"

    }
    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
        }
    }
    compileOptions {
        sourceCompatibility = 1.8
        targetCompatibility = 1.8
    }
}

dependencies {
    implementation fileTree(dir: 'libs', include: ['*.jar'])
    implementation 'com.android.support:appcompat-v7:28.0.0'


    implementation group: 'com.squareup.okhttp3', name: 'okhttp', version: '3.10.0'
    implementation group: 'com.google.code.gson', name: 'gson', version: '2.8.0'
    implementation group: 'io.reactivex.rxjava2', name: 'rxjava', version: '2.1.2'
    implementation group: 'io.reactivex.rxjava2', name: 'rxandroid', version: '2.0.2'
    implementation group: 'com.squareup.retrofit2', name: 'retrofit', version: '2.4.0'
    implementation 'com.squareup.retrofit2:converter-gson:2.4.0'
    implementation group: 'com.squareup.retrofit2', name: 'adapter-rxjava2', version: '2.5.0'
    implementation 'com.squareup.okhttp3:logging-interceptor:3.9.1'


    implementation 'com.tencent:mmkv-static:1.1.0'

}







uploadArchives {
    repositories {
        mavenDeployer {
            repository url: 'file://' + new File(System.getProperty('user.home'), '.m2/repository').absolutePath
            pom.version = "latest"
            pom.artifactId = "android-sdk-module-supper"
            pom.groupId = "org.ms"
        }
    }
}
// type显示指定任务类型或任务, 这里指定要执行Javadoc这个task,这个task在gradle中已经定义
task androidJavadocs(type: Javadoc) {
    // 设置源码所在的位置
    source = android.sourceSets.main.java.sourceFiles
}

// 生成javadoc.jar
task androidJavadocsJar(type: Jar) {
    // 指定文档名称
    classifier = 'javadoc'
    from androidJavadocs.destinationDir
}

// 生成sources.jar
task androidSourcesJar(type: Jar) {
    classifier = 'sources'
    from android.sourceSets.main.java.sourceFiles
}

// 产生相关配置文件的任务
artifacts {
    archives androidSourcesJar
    archives androidJavadocsJar
}


task install(dependsOn: uploadArchives)
