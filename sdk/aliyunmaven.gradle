apply plugin: 'maven'
// 上传到本地
def _local = true
// 是否未快照模式
def _snapshot = false
// 组id
def _groupId = "org.ms"
// 项目id
def _artifactId = "androidx-sdk-module-supper"
// 发布类型 aar jar
def _packaging = "aar"
// 发布版本
def _releaseVersion = "latest"
// 快照版本
def _snapohotVersion = "latest-SNAPSHOT"


def  aliyun=false

def _server_release_url;
def _server_snapshot_url;


if(aliyun){

    _server_release_url="https://repo.rdc.aliyun.com/repository/73792-release-PXkyIy/"
    _server_snapshot_url="https://repo.rdc.aliyun.com/repository/73792-snapshot-z4fvGZ/"
}else{
    _server_release_url="https://repo.rdc.aliyun.com/repository/73792-release-PXkyIy/"
    _server_snapshot_url="https://repo.rdc.aliyun.com/repository/73792-snapshot-z4fvGZ/"
}


if (_local) {
    uploadArchives {
        repositories {
            mavenDeployer {
                repository url: 'file://' + new File(System.getProperty('user.home'), '.m2/repository').absolutePath
                if (_snapshot) {
                    // 版本
                    pom.version = _snapohotVersion
                } else {
                    // 版本呢
                    pom.version = _releaseVersion
                }
                pom.artifactId = _artifactId
                pom.groupId = _groupId
            }
        }
    }
} else {
    uploadArchives {
        repositories.mavenDeployer {
            repository(url: _server_release_url) {
                authentication(userName: System.getenv("ALIYUN_MAVEN_USERNAME"), password: System.getenv("ALIYUN_MAVEN_PASSWORD"))
            }
            snapshotRepository(url: _server_snapshot_url) {
                authentication(userName: System.getenv("ALIYUN_MAVEN_USERNAME"), password: System.getenv("ALIYUN_MAVEN_PASSWORD"))
            }
            pom.project {
                pom.artifactId = _artifactId
                pom.groupId = _groupId
                packaging _packaging
                description ""
                if (_snapshot) {
                    version = _snapohotVersion
                } else {
                    version = _releaseVersion
                }
            }
        }
    }
}


// type显示指定任务类型或任务, 这里指定要执行Javadoc这个task,这个task在gradle中已经定义
task androidJavadocs(type: Javadoc) {
    // 设置源码所在的位置
    source = android.sourceSets.main.java.sourceFiles
}

// 生成javadoc.jar
task androidJavadocsJar(type: Jar) {
    // 指定文档名称
    classifier = 'javadoc'
    from androidJavadocs.destinationDir
}

// 生成sources.jar
task androidSourcesJar(type: Jar) {
    classifier = 'sources'
    from android.sourceSets.main.java.sourceFiles
}

// 产生相关配置文件的任务
artifacts {
    archives androidSourcesJar
    archives androidJavadocsJar
}

task install(dependsOn: uploadArchives)
